{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./modules/utils/animation.ts","webpack:///./modules/display_data/displayThreeDaysForecast.ts","webpack:///./modules/display_data/displayTodayForecast.ts","webpack:///./modules/script.ts","webpack:///./modules/fetch_data/fetchData.ts","webpack:///./modules/fetch_data/fetchTodayForecast.ts","webpack:///./modules/fetch_data/fetchThreeDayForecast.ts","webpack:///./modules/mappers/mapTodayForecast.ts","webpack:///./modules/mappers/mapThreeDaysForecast.ts","webpack:///./modules/utils/changeScale.ts","webpack:///./modules/state.ts"],"sourcesContent":["export async function playAnim(el, animation, delayMs = 0) {\n    console.log(\"test\");\n    return new Promise(resolve => {\n      el.style.setProperty('--animate-delay', `${delayMs}ms`);\n      el.classList.add('animate__animated', animation);\n\n      function onEnd(e) {\n        e.stopPropagation();\n        el.classList.remove('animate__animated', animation);\n        el.style.removeProperty('--animate-delay');\n        el.style.opacity = '1';\n        el.removeEventListener('animationend', onEnd);\n        resolve();\n      }\n      el.addEventListener('animationend', onEnd, { once: true });\n    });\n  }\n\n","export function displayThreeDayForecast (threeDayForecastArr, scale) {\n\t//displaying forecast for 3 days\n\tlet futureForecast = document.querySelector(\".futureForecastWrapper\");\n\tfutureForecast.style.display = \"flex\";\n\n\tlet getForecastIcon = async function (iconLink, dayIcon) {\n\t\ttry {\n\t\t\tlet searchString = \"https:\" + iconLink;\n\t\t\tlet response = await fetch(searchString, { mode: \"cors\" });\n\t\t\tdayIcon.style.backgroundImage = `url(${response.url})`;\n\t\t\tdayIcon.style.backgroundRepeat = \"no-repeat\";\n\t\t\tdayIcon.style.backgroundSize = \"cover\";\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Произошла ошибка:\", error);\n\t\t}\n\t};\n\n\tfunction displayDayNForecast (n) {\n\t\tlet dayN = futureForecast.querySelector(`.day${n}Wrapper`);\n\t\tlet dateN = dayN.querySelector(\".date\");\n\t\tdateN.textContent = threeDayForecastArr[n].date;\n\t\tlet dayTN = dayN.querySelector(`#day${n}temp`);\n\t\tlet nightTN = dayN.querySelector(`#night${n}temp`);\n\n\t\tconst dayKey = scale === \"C\" ? \"dayTC\" : \"dayTF\";\n\t\tconst nightKey = scale === \"C\" ? \"nightTC\" : \"nightTF\";\n\t\tdayTN.textContent = `${threeDayForecastArr[n][dayKey]} °${scale}`;\n\t\tnightTN.textContent = `${threeDayForecastArr[n][nightKey]} °${scale}`;\n\n\t\tlet dayNIcon = dayN.querySelector(\".icon\");\n\t\tlet iconNLink = threeDayForecastArr[n].icon;\n\t\tgetForecastIcon(iconNLink, dayNIcon);\n\t}\n\n\tfor (let i = 0; i <= 2; i++) {\n\t\tdisplayDayNForecast(i);\n\t}\n};","export function displayTodayForecast (todaysWeatherObj, scale) {\n\tlet todayForecast = document.querySelector(\".todayForecastWrapper\");\n\ttodayForecast.style.display = \"flex\";\n\n\t//displaying local info\n\tlet cityName = todayForecast.querySelector(\"#cityName\");\n\tcityName.textContent = todaysWeatherObj.city + \", \";\n\tlet country = todayForecast.querySelector(\"#country\");\n\tcountry.textContent = todaysWeatherObj.country;\n\tlet localtime = todayForecast.querySelector(\"#todaysDate\");\n\tlocaltime.textContent = todaysWeatherObj.localtime;\n\tlet todayCondition = todayForecast.querySelector(\"#conditionText\");\n\ttodayCondition.textContent = todaysWeatherObj.condition;\n\tlet todayIcon = todayForecast.querySelector(\".icon\");\n\tlet iconLink = todaysWeatherObj.icon;\n\n\tlet getTodayIcon = async function (iconLink) {\n\t\ttry {\n\t\t\tlet searchString = \"https:\" + iconLink;\n\t\t\tlet response = await fetch(searchString, { mode: \"cors\" });\n\t\t\ttodayIcon.style.backgroundImage = `url(${response.url})`;\n\t\t\ttodayIcon.style.backgroundRepeat = \"no-repeat\";\n\t\t\ttodayIcon.style.backgroundSize = \"cover\";\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Произошла ошибка:\", error);\n\t\t}\n\t};\n\tgetTodayIcon(iconLink);\n\n\t//displaying weather info\n\tlet humidity = todayForecast.querySelector(\"#humidity\");\n\thumidity.textContent = \"Humidity: \" + todaysWeatherObj.humidity + \" %\";\n\tlet windKPH = todayForecast.querySelector(\"#windKPH\");\n\twindKPH.textContent = \"Wind: \" + todaysWeatherObj.windKPH + \" kph\";\n\tlet cloudness = todayForecast.querySelector(\"#cloudness\");\n\n\tfunction getCloudStatus(value) {\n\t\tif (value === 0) return \"Clear\";\n\t\tif (value <= 25) return \"Little cloudy\";\n\t\tif (value <= 50) return \"Partly cloudy\";\n\t\tif (value <= 85) return \"Cloudy\";\n\t\treturn \"Mainly cloudy\";\n\t}\n\tcloudness.textContent = \"Cloudness: \" + getCloudStatus(todaysWeatherObj.cloud);\n\n\tlet todayTemp = todayForecast.querySelector(\"#todaysTemperature\");\n\tlet tempScale = scale === \"C\" ? \"tempC\" : \"tempF\";\n\ttodayTemp.textContent = `${todaysWeatherObj[tempScale]} °${scale}`;\n};","import { playAnim } from \"./utils/animation\";\nimport { displayThreeDayForecast } from \"./display_data/displayThreeDaysForecast\";\nimport { changeScale } from \"./utils/changeScale\";\nimport { displayTodayForecast } from \"./display_data/displayTodayForecast\";\nimport { mapTodayForecast } from \"./mappers/mapTodayForecast\";\nimport { mapThreeDaysForecast } from \"./mappers/mapThreeDaysForecast\";\nimport { fetchData } from \"./fetch_data/fetchData\";\n\nlet form = document.getElementById(\"citySearch\");\nconst card  = document.querySelector('.mainCardWrapper');\nconst todayForecast = document.querySelector('.todayForecastWrapper');\nconst futureForecast = document.querySelector('.futureForecastWrapper');\nlet open = false;\nlet city = form.querySelector(\"#cityInput\");\n\nform.addEventListener(\"submit\", async function (event) {\n    event.preventDefault();\n    await handleWeatherSearch(city.value);\n    open = false;\n    card.classList.remove('open');\n    card.classList.toggle('open');\n    await showAnimation();\n});\n\nasync function handleWeatherSearch (city) {\n    let fetchedData = await fetchData(city);\n    let todayForecastObject = mapTodayForecast(fetchedData[0]);\n    let threeDayForecastArray = mapThreeDaysForecast(fetchedData[1]);\n    displayTodayForecast(todayForecastObject, \"F\");\n    displayThreeDayForecast(threeDayForecastArray, \"F\");\n    changeScale(todayForecastObject, threeDayForecastArray);\n}\n\nasync function showAnimation () {\n    if (open) return;\n    open = true;\n    await playAnim(todayForecast, 'animate__fadeInDown', 150);\n    await playAnim(futureForecast, 'animate__fadeInDown', 150);\n}\n\n","import { fetchThreeDayForecast } from \"./fetchThreeDayForecast\";\nimport { fetchTodayWeather } from \"./fetchTodayForecast\";\n\nexport async function fetchData (city) {\n    let todayForecast = await fetchTodayWeather(city);\n    let threeDayForecast = await fetchThreeDayForecast(city);\n    return [todayForecast, threeDayForecast];\n}","export async function fetchTodayWeather (city) {\n    try {\n        let searchString =\n            \"https://api.weatherapi.com/v1/current.json?key=d1daec9ddc01455f82a220024232608&q=\" +\n            city;\n        let response = await fetch(searchString, { mode: \"cors\" });\n        let weatherData = await response.json();\n\n        if (!response.ok) {\n            throw new Error(\"Произошла ошибка: \" + response.status);\n        }\n        return weatherData;\n    } catch (error) {\n        console.error(\"Произошла ошибка:\", error);\n        alert(\"Unknown location\");\n    }\n    return;\n};","export async function fetchThreeDayForecast (city) {\n    try {\n        let searchString =\n            \"https://api.weatherapi.com/v1/forecast.json?key=d1daec9ddc01455f82a220024232608&q=\" +\n            city +\n            \"&days=3\";\n        let response = await fetch(searchString, { mode: \"cors\" });\n        let weatherData = await response.json();\n        if (!response.ok) {\n            throw new Error(\"Произошла ошибка: \" + response.status);\n        }\n        return weatherData;\n    } catch (error) {\n        console.error(\"Произошла ошибка:\", error);\n    }\n    return;\n};","export function mapTodayForecast (weatherData) {\n    let todayForecast = {\n\t\tcity: weatherData.location.name,\n\t\tlocaltime: weatherData.location.localtime,\n\t\tcondition: weatherData.current.condition.text,\n\t\thumidity: weatherData.current.humidity,\n\t\ttempC: weatherData.current.temp_c,\n\t\ttempF: weatherData.current.temp_f,\n\t\twindKPH: weatherData.current.wind_kph,\n\t\tcloud: weatherData.current.cloud,\n\t\ticon: weatherData.current.condition.icon,\n\t};\n\treturn todayForecast;\n}\n\n//установить TS в проект\n//добавить конфиг tsc --init","export function mapThreeDaysForecast (weatherData) {\n    let threeDayForecast = [{}, {}, {}];\n\n    for (let i = 0; i <= 2; i++) {\n        threeDayForecast[i].date = weatherData.forecast.forecastday[i].date;\n        threeDayForecast[i].dayTC =\n            weatherData.forecast.forecastday[i].day.maxtemp_c;\n        threeDayForecast[i].dayTF =\n            weatherData.forecast.forecastday[i].day.maxtemp_f;\n        threeDayForecast[i].nightTC =\n            weatherData.forecast.forecastday[i].day.mintemp_c;\n        threeDayForecast[i].nightTF =\n            weatherData.forecast.forecastday[i].day.mintemp_f;\n        threeDayForecast[i].icon =\n            weatherData.forecast.forecastday[i].day.condition.icon;\n    }\n    return threeDayForecast\n}","import { displayThreeDayForecast } from \"../display_data/displayThreeDaysForecast\";\nimport { displayTodayForecast } from \"../display_data/displayTodayForecast\";\nimport { getScale } from \"../state\";\n\nexport function changeScale(todayForecastObject, threeDayForecastArray) {\n    let scale = getScale();\n    let changeScaleBtn = document.getElementById(\"changeTempUnit\");\n\n    changeScaleBtn.addEventListener(\"click\", function () {\n        if (scale == \"F\") {\n            scale = \"C\";\n            changeScaleBtn.textContent = \"to Fahrenheit\";\n        } else if (scale == \"C\") {\n            scale = \"F\";\n            changeScaleBtn.textContent = \"to Celsius\";\n        }\n\n        //re-render display with new scale\n        displayTodayForecast(todayForecastObject, scale);\n        displayThreeDayForecast(threeDayForecastArray, scale);\n    });\n}","let scale = \"F\";\n\nexport function getScale() {\n  return scale;\n}\n\nexport function setScale(newScale) {\n  scale = newScale;\n}"],"names":["async","playAnim","el","animation","delayMs","console","log","Promise","resolve","style","setProperty","classList","add","addEventListener","onEnd","e","stopPropagation","remove","removeProperty","opacity","removeEventListener","once","displayThreeDayForecast","threeDayForecastArr","scale","futureForecast","document","querySelector","displayDayNForecast","n","dayN","textContent","date","dayTN","nightTN","dayKey","nightKey","dayNIcon","iconLink","dayIcon","searchString","response","fetch","mode","backgroundImage","url","backgroundRepeat","backgroundSize","error","getForecastIcon","icon","display","i","displayTodayForecast","todaysWeatherObj","todayForecast","city","country","localtime","condition","todayIcon","value","getTodayIcon","humidity","windKPH","cloud","tempScale","getElementById","card","event","preventDefault","fetchedData","weatherData","json","ok","Error","status","alert","fetchTodayWeather","threeDayForecast","fetchThreeDayForecast","fetchData","todayForecastObject","location","name","current","text","tempC","temp_c","tempF","temp_f","wind_kph","threeDayForecastArray","forecast","forecastday","dayTC","day","maxtemp_c","dayTF","maxtemp_f","nightTC","mintemp_c","nightTF","mintemp_f","mapThreeDaysForecast","changeScaleBtn","changeScale","handleWeatherSearch","toggle","showAnimation"],"sourceRoot":""}