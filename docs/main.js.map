{"version":3,"file":"main.js","mappings":"mBAAOA,eAAeC,EAASC,EAAIC,EAAWC,EAAU,GAEpD,OADAC,QAAQC,IAAI,QACL,IAAIC,SAAQC,IACjBN,EAAGO,MAAMC,YAAY,kBAAmB,GAAGN,OAC3CF,EAAGS,UAAUC,IAAI,oBAAqBT,GAUtCD,EAAGW,iBAAiB,gBARpB,SAASC,EAAMC,GACbA,EAAEC,kBACFd,EAAGS,UAAUM,OAAO,oBAAqBd,GACzCD,EAAGO,MAAMS,eAAe,mBACxBhB,EAAGO,MAAMU,QAAU,IACnBjB,EAAGkB,oBAAoB,eAAgBN,GACvCN,GACF,GAC2C,CAAEa,MAAM,GAAO,GAE9D,CChBK,SAASC,EAAyBC,EAAqBC,GAE7D,IAAIC,EAAiBC,SAASC,cAAc,0BAC5CF,EAAehB,MAAMmB,QAAU,OAE/B,IAAIC,EAAkB7B,eAAgB8B,EAAUC,GAC/C,IACC,IAAIC,EAAe,SAAWF,EAC1BG,QAAiBC,MAAMF,EAAc,CAAEG,KAAM,SACjDJ,EAAQtB,MAAM2B,gBAAkB,OAAOH,EAASI,OAChDN,EAAQtB,MAAM6B,iBAAmB,YACjCP,EAAQtB,MAAM8B,eAAiB,OAChC,CAAE,MAAOC,GACRnC,QAAQmC,MAAM,oBAAqBA,EACpC,CACD,EAEIC,EAAOhB,EAAeE,cAAc,gBAC5Bc,EAAKd,cAAc,SACzBe,YAAcnB,EAAoB,GAAGoB,KAC3C,IAAIC,EAAQH,EAAKd,cAAc,aAC3BkB,EAAUJ,EAAKd,cAAc,eACnB,MAAVH,GACHoB,EAAMF,YAAcnB,EAAoB,GAAGuB,MAAQ,KAAOtB,EAC1DqB,EAAQH,YAAcnB,EAAoB,GAAGwB,QAAU,KAAOvB,IAE9DoB,EAAMF,YAAcnB,EAAoB,GAAGyB,MAAQ,IAAMxB,EACzDqB,EAAQH,YAAcnB,EAAoB,GAAG0B,QAAU,IAAMzB,GAE9D,IAAI0B,EAAWT,EAAKd,cAAc,SAElCE,EADgBN,EAAoB,GAAG4B,KACZD,GAG3B,IAAIE,EAAO3B,EAAeE,cAAc,gBAC5ByB,EAAKzB,cAAc,SACzBe,YAAcnB,EAAoB,GAAGoB,KAC3C,IAAIU,EAAQD,EAAKzB,cAAc,aAC3B2B,EAAUF,EAAKzB,cAAc,eACnB,MAAVH,GACH6B,EAAMX,YAAcnB,EAAoB,GAAGuB,MAAQ,KAAOtB,EAC1D8B,EAAQZ,YAAcnB,EAAoB,GAAGwB,QAAU,KAAOvB,IAE9D6B,EAAMX,YAAcnB,EAAoB,GAAGyB,MAAQ,IAAMxB,EACzD8B,EAAQZ,YAAcnB,EAAoB,GAAG0B,QAAU,IAAMzB,GAE9D,IAAI+B,EAAWH,EAAKzB,cAAc,SAElCE,EADgBN,EAAoB,GAAG4B,KACZI,GAG3B,IAAIC,EAAO/B,EAAeE,cAAc,gBAC5B6B,EAAK7B,cAAc,SACzBe,YAAcnB,EAAoB,GAAGoB,KAC3C,IAAIc,EAAQD,EAAK7B,cAAc,aAC3B+B,EAAUF,EAAK7B,cAAc,eACnB,MAAVH,GACHiC,EAAMf,YAAcnB,EAAoB,GAAGuB,MAAQ,KAAOtB,EAC1DkC,EAAQhB,YAAcnB,EAAoB,GAAGwB,QAAU,KAAOvB,IAE9DiC,EAAMf,YAAcnB,EAAoB,GAAGyB,MAAQ,IAAMxB,EACzDkC,EAAQhB,YAAcnB,EAAoB,GAAG0B,QAAU,IAAMzB,GAE9D,IAAImC,EAAWH,EAAK7B,cAAc,SAElCE,EADgBN,EAAoB,GAAG4B,KACZQ,EAE5B,CCnEO,SAASC,EAAsBC,EAAkBrC,GACvD,IAAIsC,EAAgBpC,SAASC,cAAc,yBAC3CmC,EAAcrD,MAAMmB,QAAU,OAGfkC,EAAcnC,cAAc,aAClCe,YAAcmB,EAAiBE,KAAO,KACjCD,EAAcnC,cAAc,YAClCe,YAAcmB,EAAiBG,QACvBF,EAAcnC,cAAc,eAClCe,YAAcmB,EAAiBI,UACpBH,EAAcnC,cAAc,kBAClCe,YAAcmB,EAAiBK,UAC9C,IAAIC,EAAYL,EAAcnC,cAAc,UAGzB3B,eAAgB8B,GAClC,IACC,IAAIE,EAAe,SAAWF,EAC1BG,QAAiBC,MAAMF,EAAc,CAAEG,KAAM,SACjDgC,EAAU1D,MAAM2B,gBAAkB,OAAOH,EAASI,OAClD8B,EAAU1D,MAAM6B,iBAAmB,YACnC6B,EAAU1D,MAAM8B,eAAiB,OAClC,CAAE,MAAOC,GACRnC,QAAQmC,MAAM,oBAAqBA,EACpC,CACD,CACA4B,CAbeP,EAAiBV,MAgBjBW,EAAcnC,cAAc,aAClCe,YAAc,aAAemB,EAAiBQ,SAAW,KACpDP,EAAcnC,cAAc,YAClCe,YAAc,SAAWmB,EAAiBS,QAAU,OAC5D,IAAIC,EAAYT,EAAcnC,cAAc,cAExC6C,EAAc,GACY,GAA1BX,EAAiBY,MACpBD,EAAc,QACJ,EAAIX,EAAiBY,OAASZ,EAAiBY,MAAQ,GACjED,EAAc,gBACJ,GAAKX,EAAiBY,OAASZ,EAAiBY,MAAQ,GAClED,EAAc,gBACJ,GAAKX,EAAiBY,OAASZ,EAAiBY,MAAQ,GAClED,EAAc,SACJ,GAAKX,EAAiBY,QAChCD,EAAc,iBAEfD,EAAU7B,YAAc,cAAgB8B,EAExC,IAAIE,EAAYZ,EAAcnC,cAAc,sBAC9B,MAAVH,EACHkD,EAAUhC,YAAcmB,EAAiBc,MAAQ,IAAMnD,EACnC,MAAVA,IACVkD,EAAUhC,YAAcmB,EAAiBe,MAAQ,KAAOpD,EAE1D,CChDA,IAAI,EAAOE,SAASmD,eAAe,cACnC,MAAMC,EAAQpD,SAASC,cAAc,oBAC/BmC,EAAgBpC,SAASC,cAAc,yBACvCF,EAAiBC,SAASC,cAAc,0BAC9C,IAAI,GAAO,EACPoC,EAAO,EAAKpC,cAAc,cAE9B,EAAKd,iBAAiB,UAAUb,eAAgB+E,GAC5CA,EAAMC,uBASVhF,eAAoC+D,GAChC,IAAIkB,QCvBDjF,eAA0B+D,GAC7B,IAAID,QCJD9D,eAAkC+D,GACrC,IACI,IAAI/B,EACA,oFACA+B,EACA9B,QAAiBC,MAAMF,EAAc,CAAEG,KAAM,SAC7C+C,QAAoBjD,EAASkD,OAEjC,IAAKlD,EAASmD,GACV,MAAM,IAAIC,MAAM,qBAAuBpD,EAASqD,QAEpD,OAAOJ,CACX,CAAE,MAAO1C,GACLnC,QAAQmC,MAAM,oBAAqBA,GACnC+C,MAAM,mBACV,CAEJ,CDb8BC,CAAkBzB,GACxC0B,QELDzF,eAAsC+D,GACzC,IACI,IAAI/B,EACA,qFACA+B,EACA,UACA9B,QAAiBC,MAAMF,EAAc,CAAEG,KAAM,SAC7C+C,QAAoBjD,EAASkD,OACjC,IAAKlD,EAASmD,GACV,MAAM,IAAIC,MAAM,qBAAuBpD,EAASqD,QAEpD,OAAOJ,CACX,CAAE,MAAO1C,GACLnC,QAAQmC,MAAM,oBAAqBA,EACvC,CAEJ,CFXiCkD,CAAsB3B,GACnD,MAAO,CAACD,EAAe2B,EAC3B,CDmB4BE,CAAU5B,GAC9B6B,EI3BD,SAA2BV,GAC9B,IAAIpB,EAAgB,CAAC,EAWxB,OAVAA,EAAcC,KAAOmB,EAAYW,SAASC,KAC1ChC,EAAcE,QAAUkB,EAAYW,SAAS7B,QAC7CF,EAAcG,UAAYiB,EAAYW,SAAS5B,UAC/CH,EAAcI,UAAYgB,EAAYa,QAAQ7B,UAAU8B,KACxDlC,EAAcO,SAAWa,EAAYa,QAAQ1B,SAC7CP,EAAcc,MAAQM,EAAYa,QAAQE,OAC1CnC,EAAca,MAAQO,EAAYa,QAAQG,OAC1CpC,EAAcQ,QAAUY,EAAYa,QAAQI,SAC5CrC,EAAcW,MAAQS,EAAYa,QAAQtB,MAC1CX,EAAcX,KAAO+B,EAAYa,QAAQ7B,UAAUf,KAC5CW,CACR,CJc8BsC,CAAiBnB,EAAY,IACnDoB,EK5BD,SAA+BnB,GAClC,IAAIO,EAAmB,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,GAoCjC,OAnCAA,EAAiB,GAAG9C,KAAOuC,EAAYoB,SAASC,YAAY,GAAG5D,KAC/D8C,EAAiB,GAAG3C,MAChBoC,EAAYoB,SAASC,YAAY,GAAGC,IAAIC,UAC5ChB,EAAiB,GAAGzC,MAChBkC,EAAYoB,SAASC,YAAY,GAAGC,IAAIE,UAC5CjB,EAAiB,GAAG1C,QAChBmC,EAAYoB,SAASC,YAAY,GAAGC,IAAIG,UAC5ClB,EAAiB,GAAGxC,QAChBiC,EAAYoB,SAASC,YAAY,GAAGC,IAAII,UAC5CnB,EAAiB,GAAGtC,KAChB+B,EAAYoB,SAASC,YAAY,GAAGC,IAAItC,UAAUf,KAEtDsC,EAAiB,GAAG9C,KAAOuC,EAAYoB,SAASC,YAAY,GAAG5D,KAC/D8C,EAAiB,GAAG3C,MAChBoC,EAAYoB,SAASC,YAAY,GAAGC,IAAIC,UAC5ChB,EAAiB,GAAGzC,MAChBkC,EAAYoB,SAASC,YAAY,GAAGC,IAAIE,UAC5CjB,EAAiB,GAAG1C,QAChBmC,EAAYoB,SAASC,YAAY,GAAGC,IAAIG,UAC5ClB,EAAiB,GAAGxC,QAChBiC,EAAYoB,SAASC,YAAY,GAAGC,IAAII,UAC5CnB,EAAiB,GAAGtC,KAChB+B,EAAYoB,SAASC,YAAY,GAAGC,IAAItC,UAAUf,KAEtDsC,EAAiB,GAAG9C,KAAOuC,EAAYoB,SAASC,YAAY,GAAG5D,KAC/D8C,EAAiB,GAAG3C,MAChBoC,EAAYoB,SAASC,YAAY,GAAGC,IAAIC,UAC5ChB,EAAiB,GAAGzC,MAChBkC,EAAYoB,SAASC,YAAY,GAAGC,IAAIE,UAC5CjB,EAAiB,GAAG1C,QAChBmC,EAAYoB,SAASC,YAAY,GAAGC,IAAIG,UAC5ClB,EAAiB,GAAGxC,QAChBiC,EAAYoB,SAASC,YAAY,GAAGC,IAAII,UAC5CnB,EAAiB,GAAGtC,KAChB+B,EAAYoB,SAASC,YAAY,GAAGC,IAAItC,UAAUf,KAC/CsC,CACX,CLVgCoB,CAAqB5B,EAAY,IAC7DrB,EAAqBgC,EAAqB,KAC1CtE,EAAwB+E,EAAuB,KM1B5C,SAAqBT,EAAqBS,GAC7C,IAAI7E,ECLI,IDMJsF,EAAiBpF,SAASmD,eAAe,kBAE7CiC,EAAejG,iBAAiB,SAAS,WACxB,KAATW,GACAA,EAAQ,IACRsF,EAAepE,YAAc,iBACb,KAATlB,IACPA,EAAQ,IACRsF,EAAepE,YAAc,cAIjCkB,EAAqBgC,EAAqBpE,GAC1CF,EAAwB+E,EAAuB7E,EACnD,GACJ,CNUIuF,CAAYnB,EAAqBS,EACrC,CAfUW,CAAoBjD,EAAKkD,OAE/B,GAAO,EACPnC,EAAKnE,UAAUM,OAAO,QACtB6D,EAAKnE,UAAUuG,OAAO,cAa1BlH,iBACQ,IACJ,GAAO,QACDC,EAAS6D,EAAe,sBAAuB,WAC/C7D,EAASwB,EAAgB,sBAAuB,KAC1D,CAjBU0F,EACV,G","sources":["webpack:///./modules/utlis/animation.js","webpack:///./modules/display_data/displayThreeDaysForecast.js","webpack:///./modules/display_data/displayTodayForecast.js","webpack:///./modules/script.js","webpack:///./modules/fetch_data/fetchData.js","webpack:///./modules/fetch_data/fetchTodayForecast.js","webpack:///./modules/fetch_data/fetchThreeDayForecast.js","webpack:///./modules/mappers/mapTodayForecast.js","webpack:///./modules/mappers/mapThreeDaysForecast.js","webpack:///./modules/utlis/changeScale.js","webpack:///./modules/state.js"],"sourcesContent":["export async function playAnim(el, animation, delayMs = 0) {\n    console.log(\"anim\");\n    return new Promise(resolve => {\n      el.style.setProperty('--animate-delay', `${delayMs}ms`);\n      el.classList.add('animate__animated', animation);\n\n      function onEnd(e) {\n        e.stopPropagation();\n        el.classList.remove('animate__animated', animation);\n        el.style.removeProperty('--animate-delay');\n        el.style.opacity = '1';\n        el.removeEventListener('animationend', onEnd);\n        resolve();\n      }\n      el.addEventListener('animationend', onEnd, { once: true });\n    });\n  }\n\n","export function displayThreeDayForecast (threeDayForecastArr, scale) {\n\t//displaying forecast for 3 days\n\tlet futureForecast = document.querySelector(\".futureForecastWrapper\");\n\tfutureForecast.style.display = \"flex\";\n\n\tlet getForecastIcon = async function (iconLink, dayIcon) {\n\t\ttry {\n\t\t\tlet searchString = \"https:\" + iconLink;\n\t\t\tlet response = await fetch(searchString, { mode: \"cors\" });\n\t\t\tdayIcon.style.backgroundImage = `url(${response.url})`;\n\t\t\tdayIcon.style.backgroundRepeat = \"no-repeat\";\n\t\t\tdayIcon.style.backgroundSize = \"cover\";\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Произошла ошибка:\", error);\n\t\t}\n\t};\n\t//day 0\n\tlet day0 = futureForecast.querySelector(\".day0Wrapper\");\n\tlet date0 = day0.querySelector(\".date\");\n\tdate0.textContent = threeDayForecastArr[0].date;\n\tlet dayT0 = day0.querySelector(\"#day0temp\");\n\tlet nightT0 = day0.querySelector(\"#night0temp\");\n\tif (scale === \"C\") {\n\t\tdayT0.textContent = threeDayForecastArr[0].dayTC + \" °\" + scale;\n\t\tnightT0.textContent = threeDayForecastArr[0].nightTC + \" °\" + scale;\n\t} else {\n\t\tdayT0.textContent = threeDayForecastArr[0].dayTF + \" \" + scale;\n\t\tnightT0.textContent = threeDayForecastArr[0].nightTF + \" \" + scale;\n\t}\n\tlet day0Icon = day0.querySelector(\".icon\");\n\tlet icon0Link = threeDayForecastArr[0].icon;\n\tgetForecastIcon(icon0Link, day0Icon);\n\n\t//day 1\n\tlet day1 = futureForecast.querySelector(\".day1Wrapper\");\n\tlet date1 = day1.querySelector(\".date\");\n\tdate1.textContent = threeDayForecastArr[1].date;\n\tlet dayT1 = day1.querySelector(\"#day1temp\");\n\tlet nightT1 = day1.querySelector(\"#night1temp\");\n\tif (scale === \"C\") {\n\t\tdayT1.textContent = threeDayForecastArr[1].dayTC + \" °\" + scale;\n\t\tnightT1.textContent = threeDayForecastArr[1].nightTC + \" °\" + scale;\n\t} else {\n\t\tdayT1.textContent = threeDayForecastArr[1].dayTF + \" \" + scale;\n\t\tnightT1.textContent = threeDayForecastArr[1].nightTF + \" \" + scale;\n\t}\n\tlet day1Icon = day1.querySelector(\".icon\");\n\tlet icon1Link = threeDayForecastArr[1].icon;\n\tgetForecastIcon(icon1Link, day1Icon);\n\n\t//day 2\n\tlet day2 = futureForecast.querySelector(\".day2Wrapper\");\n\tlet date2 = day2.querySelector(\".date\");\n\tdate2.textContent = threeDayForecastArr[2].date;\n\tlet dayT2 = day2.querySelector(\"#day2temp\");\n\tlet nightT2 = day2.querySelector(\"#night2temp\");\n\tif (scale === \"C\") {\n\t\tdayT2.textContent = threeDayForecastArr[2].dayTC + \" °\" + scale;\n\t\tnightT2.textContent = threeDayForecastArr[2].nightTC + \" °\" + scale;\n\t} else {\n\t\tdayT2.textContent = threeDayForecastArr[2].dayTF + \" \" + scale;\n\t\tnightT2.textContent = threeDayForecastArr[2].nightTF + \" \" + scale;\n\t}\n\tlet day2Icon = day2.querySelector(\".icon\");\n\tlet icon2Link = threeDayForecastArr[2].icon;\n\tgetForecastIcon(icon2Link, day2Icon);\n\t//displaying forecast for 3 days\n};","export function displayTodayForecast (todaysWeatherObj, scale) {\n\tlet todayForecast = document.querySelector(\".todayForecastWrapper\");\n\ttodayForecast.style.display = \"flex\";\n\n\t//displaying local info\n\tlet cityName = todayForecast.querySelector(\"#cityName\");\n\tcityName.textContent = todaysWeatherObj.city + \", \";\n\tlet country = todayForecast.querySelector(\"#country\");\n\tcountry.textContent = todaysWeatherObj.country;\n\tlet localtime = todayForecast.querySelector(\"#todaysDate\");\n\tlocaltime.textContent = todaysWeatherObj.localtime;\n\tlet todayCondition = todayForecast.querySelector(\"#conditionText\");\n\ttodayCondition.textContent = todaysWeatherObj.condition;\n\tlet todayIcon = todayForecast.querySelector(\".icon\");\n\tlet iconLink = todaysWeatherObj.icon;\n\n\tlet getTodayIcon = async function (iconLink) {\n\t\ttry {\n\t\t\tlet searchString = \"https:\" + iconLink;\n\t\t\tlet response = await fetch(searchString, { mode: \"cors\" });\n\t\t\ttodayIcon.style.backgroundImage = `url(${response.url})`;\n\t\t\ttodayIcon.style.backgroundRepeat = \"no-repeat\";\n\t\t\ttodayIcon.style.backgroundSize = \"cover\";\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Произошла ошибка:\", error);\n\t\t}\n\t};\n\tgetTodayIcon(iconLink);\n\n\t//displaying weather info\n\tlet humidity = todayForecast.querySelector(\"#humidity\");\n\thumidity.textContent = \"Humidity: \" + todaysWeatherObj.humidity + \" %\";\n\tlet windKPH = todayForecast.querySelector(\"#windKPH\");\n\twindKPH.textContent = \"Wind: \" + todaysWeatherObj.windKPH + \" kph\";\n\tlet cloudness = todayForecast.querySelector(\"#cloudness\");\n\n\tlet cloudStatus = \"\";\n\tif (todaysWeatherObj.cloud == 0) {\n\t\tcloudStatus = \"Clear\";\n\t} else if (0 < todaysWeatherObj.cloud && todaysWeatherObj.cloud < 26) {\n\t\tcloudStatus = \"Little cloudy\";\n\t} else if (24 < todaysWeatherObj.cloud && todaysWeatherObj.cloud < 51) {\n\t\tcloudStatus = \"Partly cloudy\";\n\t} else if (50 < todaysWeatherObj.cloud && todaysWeatherObj.cloud < 85) {\n\t\tcloudStatus = \"Cloudy\";\n\t} else if (84 < todaysWeatherObj.cloud) {\n\t\tcloudStatus = \"Mainly cloudy\";\n\t}\n\tcloudness.textContent = \"Cloudness: \" + cloudStatus;\n\n\tlet todayTemp = todayForecast.querySelector(\"#todaysTemperature\");\n\tif (scale === \"F\") {\n\t\ttodayTemp.textContent = todaysWeatherObj.tempF + \" \" + scale;\n\t} else if (scale === \"C\") {\n\t\ttodayTemp.textContent = todaysWeatherObj.tempC + \" °\" + scale;\n\t}\n};","import { playAnim } from \"./utlis/animation\";\nimport { displayThreeDayForecast } from \"./display_data/displayThreeDaysForecast\";\nimport { displayTodayForecast } from \"./display_data/displayTodayForecast\";\nimport { fetchData } from \"./fetch_data/fetchData\";\nimport { mapThreeDaysForecast } from \"./mappers/mapThreeDaysForecast\";\nimport { mapTodayForecast } from \"./mappers/mapTodayForecast\";\nimport { changeScale } from \"./utlis/changeScale\";\n\nlet form = document.getElementById(\"citySearch\");\nconst card  = document.querySelector('.mainCardWrapper');\nconst todayForecast = document.querySelector('.todayForecastWrapper');\nconst futureForecast = document.querySelector('.futureForecastWrapper');\nlet open = false;\nlet city = form.querySelector(\"#cityInput\");\n\nform.addEventListener(\"submit\", async function (event) {\n    event.preventDefault();\n    await handleWeatherSearch(city.value);\n\n    open = false;\n    card.classList.remove('open');\n    card.classList.toggle('open');\n    await showAnimation();\n});\n\nasync function handleWeatherSearch (city) {\n    let fetchedData = await fetchData(city);\n    let todayForecastObject = mapTodayForecast(fetchedData[0]);\n    let threeDayForecastArray = mapThreeDaysForecast(fetchedData[1]);\n    displayTodayForecast(todayForecastObject, \"F\");\n    displayThreeDayForecast(threeDayForecastArray, \"F\");\n    changeScale(todayForecastObject, threeDayForecastArray);\n}\n\nasync function showAnimation () {\n    if (open) return;\n    open = true;\n    await playAnim(todayForecast, 'animate__fadeInDown', 150);\n    await playAnim(futureForecast, 'animate__fadeInDown', 150);\n}\n\n","import { fetchThreeDayForecast } from \"./fetchThreeDayForecast\";\nimport { fetchTodayWeather } from \"./fetchTodayForecast\";\n\nexport async function fetchData (city) {\n    let todayForecast = await fetchTodayWeather(city);\n    let threeDayForecast = await fetchThreeDayForecast(city);\n    return [todayForecast, threeDayForecast];\n}","export async function fetchTodayWeather (city) {\n    try {\n        let searchString =\n            \"https://api.weatherapi.com/v1/current.json?key=d1daec9ddc01455f82a220024232608&q=\" +\n            city;\n        let response = await fetch(searchString, { mode: \"cors\" });\n        let weatherData = await response.json();\n\n        if (!response.ok) {\n            throw new Error(\"Произошла ошибка: \" + response.status);\n        }\n        return weatherData;\n    } catch (error) {\n        console.error(\"Произошла ошибка:\", error);\n        alert(\"Unknown location\");\n    }\n    return;\n};","export async function fetchThreeDayForecast (city) {\n    try {\n        let searchString =\n            \"https://api.weatherapi.com/v1/forecast.json?key=d1daec9ddc01455f82a220024232608&q=\" +\n            city +\n            \"&days=3\";\n        let response = await fetch(searchString, { mode: \"cors\" });\n        let weatherData = await response.json();\n        if (!response.ok) {\n            throw new Error(\"Произошла ошибка: \" + response.status);\n        }\n        return weatherData;\n    } catch (error) {\n        console.error(\"Произошла ошибка:\", error);\n    }\n    return;\n};","export function mapTodayForecast (weatherData) {\n    let todayForecast = {};\n\ttodayForecast.city = weatherData.location.name;\n\ttodayForecast.country = weatherData.location.country;\n\ttodayForecast.localtime = weatherData.location.localtime;\n\ttodayForecast.condition = weatherData.current.condition.text;\n\ttodayForecast.humidity = weatherData.current.humidity;\n\ttodayForecast.tempC = weatherData.current.temp_c;\n\ttodayForecast.tempF = weatherData.current.temp_f;\n\ttodayForecast.windKPH = weatherData.current.wind_kph;\n\ttodayForecast.cloud = weatherData.current.cloud;\n\ttodayForecast.icon = weatherData.current.condition.icon;\n\treturn todayForecast;\n}","export function mapThreeDaysForecast (weatherData) {\n    let threeDayForecast = [{}, {}, {}];\n    threeDayForecast[0].date = weatherData.forecast.forecastday[0].date;\n    threeDayForecast[0].dayTC =\n        weatherData.forecast.forecastday[0].day.maxtemp_c;\n    threeDayForecast[0].dayTF =\n        weatherData.forecast.forecastday[0].day.maxtemp_f;\n    threeDayForecast[0].nightTC =\n        weatherData.forecast.forecastday[0].day.mintemp_c;\n    threeDayForecast[0].nightTF =\n        weatherData.forecast.forecastday[0].day.mintemp_f;\n    threeDayForecast[0].icon =\n        weatherData.forecast.forecastday[0].day.condition.icon;\n\n    threeDayForecast[1].date = weatherData.forecast.forecastday[1].date;\n    threeDayForecast[1].dayTC =\n        weatherData.forecast.forecastday[1].day.maxtemp_c;\n    threeDayForecast[1].dayTF =\n        weatherData.forecast.forecastday[1].day.maxtemp_f;\n    threeDayForecast[1].nightTC =\n        weatherData.forecast.forecastday[1].day.mintemp_c;\n    threeDayForecast[1].nightTF =\n        weatherData.forecast.forecastday[1].day.mintemp_f;\n    threeDayForecast[1].icon =\n        weatherData.forecast.forecastday[1].day.condition.icon;\n\n    threeDayForecast[2].date = weatherData.forecast.forecastday[2].date;\n    threeDayForecast[2].dayTC =\n        weatherData.forecast.forecastday[2].day.maxtemp_c;\n    threeDayForecast[2].dayTF =\n        weatherData.forecast.forecastday[2].day.maxtemp_f;\n    threeDayForecast[2].nightTC =\n        weatherData.forecast.forecastday[2].day.mintemp_c;\n    threeDayForecast[2].nightTF =\n        weatherData.forecast.forecastday[2].day.mintemp_f;\n    threeDayForecast[2].icon =\n        weatherData.forecast.forecastday[2].day.condition.icon;\n    return threeDayForecast\n}","import { displayThreeDayForecast } from \"../display_data/displayThreeDaysForecast\";\nimport { displayTodayForecast } from \"../display_data/displayTodayForecast\";\nimport { getScale } from \"../state\";\n\nexport function changeScale(todayForecastObject, threeDayForecastArray) {\n    let scale = getScale();\n    let changeScaleBtn = document.getElementById(\"changeTempUnit\");\n\n    changeScaleBtn.addEventListener(\"click\", function () {\n        if (scale == \"F\") {\n            scale = \"C\";\n            changeScaleBtn.textContent = \"to Fahrenheit\";\n        } else if (scale == \"C\") {\n            scale = \"F\";\n            changeScaleBtn.textContent = \"to Celsius\";\n        }\n\n        //re-render display with new scale\n        displayTodayForecast(todayForecastObject, scale);\n        displayThreeDayForecast(threeDayForecastArray, scale);\n    });\n}","let scale = \"F\";\n\nexport function getScale() {\n  return scale;\n}\n\nexport function setScale(newScale) {\n  scale = newScale;\n}"],"names":["async","playAnim","el","animation","delayMs","console","log","Promise","resolve","style","setProperty","classList","add","addEventListener","onEnd","e","stopPropagation","remove","removeProperty","opacity","removeEventListener","once","displayThreeDayForecast","threeDayForecastArr","scale","futureForecast","document","querySelector","display","getForecastIcon","iconLink","dayIcon","searchString","response","fetch","mode","backgroundImage","url","backgroundRepeat","backgroundSize","error","day0","textContent","date","dayT0","nightT0","dayTC","nightTC","dayTF","nightTF","day0Icon","icon","day1","dayT1","nightT1","day1Icon","day2","dayT2","nightT2","day2Icon","displayTodayForecast","todaysWeatherObj","todayForecast","city","country","localtime","condition","todayIcon","getTodayIcon","humidity","windKPH","cloudness","cloudStatus","cloud","todayTemp","tempF","tempC","getElementById","card","event","preventDefault","fetchedData","weatherData","json","ok","Error","status","alert","fetchTodayWeather","threeDayForecast","fetchThreeDayForecast","fetchData","todayForecastObject","location","name","current","text","temp_c","temp_f","wind_kph","mapTodayForecast","threeDayForecastArray","forecast","forecastday","day","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","mapThreeDaysForecast","changeScaleBtn","changeScale","handleWeatherSearch","value","toggle","showAnimation"],"sourceRoot":""}